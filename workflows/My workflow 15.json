{
  "active": false,
  "connections": {
    "Determine Type": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "When clicking ‘Test workflow’": {
      "main": [
        [
          {
            "node": "Gmail",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Gmail": {
      "main": [
        [
          {
            "node": "Determine Type",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No Operation, do nothing",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        []
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-04-14T12:40:11.562Z",
  "id": "ECCZeyMGJRCEG4kj",
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "My workflow 15",
  "nodes": [
    {
      "parameters": {
        "language": "javascript",
        "jsCode": "const subject = ($json.subject || \"\").toLowerCase();\nconst from = typeof $json.from === \"string\" ? $json.from.toLowerCase() : \"\";\nconst text = ($json.text || \"\").toLowerCase();\nconst trimmedBody = text.substring(0, 500);\n\nconst labelMap = [\n  { keyword: \"guest card\", label: \"LEAD - Guest Cards\" },\n  { keyword: \"application\", label: \"LEAD - Applications\" },\n  { keyword: \"receivable\", label: \"SYS - AppFolio Reports\" },\n  { keyword: \"rent total\", label: \"SYS - AppFolio Reports\" },\n  { keyword: \"owner\", label: \"OWN - Statements & Requests\" },\n  { keyword: \"delinquency\", label: \"OPS - Tenant Issues\" },\n  { keyword: \"maintenance\", label: \"OPS - Maintenance Requests\" },\n  { keyword: \"invoice\", label: \"OPS - Vendor Invoices\" },\n  { keyword: \"marketing\", label: \"MKT - Ad Campaigns\" },\n  { keyword: \"n8n\", label: \"SYS - Automation Logs\" },\n  { keyword: \"promotion\", label: \"SPAM\" },\n  { keyword: \"newsletter\", label: \"SPAM\" },\n  { keyword: \"deal\", label: \"SPAM\" },\n  { keyword: \"offer\", label: \"SPAM\" },\n  { keyword: \"admin\", label: \"ADM - Internal Notices\" }\n];\n\nlet emailLabel = \"REVIEW\";\nlet isSpam = false;\nlet isUrgent = false;\nlet skipAI = false;\n\nfor (const { keyword, label } of labelMap) {\n  if (subject.includes(keyword)) {\n    emailLabel = label;\n    if (label === \"SPAM\") isSpam = true;\n    if (label === \"OPS - Maintenance Requests\") isUrgent = true;\n    break;\n  }\n}\n\n// Skip AI summarization for guest cards, interests, or known report senders\nif (\n  subject.includes(\"guest card\") ||\n  subject.includes(\"interest\") ||\n  from.includes(\"donotreply@appfolio.com\")\n) {\n  skipAI = true;\n}\n\nreturn [{\n  ...$json,\n  emailLabel,\n  isSpam,\n  isUrgent,\n  skipAI,\n  trimmedBody\n}];\n"
      },
      "id": "8eb1abf9-8cfb-4356-99ef-1d3d657fd683",
      "name": "Determine Type",
      "type": "n8n-nodes-base.code",
      "typeVersion": 1,
      "position": [
        260,
        -100
      ]
    },
    {
      "parameters": {
        "resource": "message",
        "operation": "get",
        "additionalFields": {}
      },
      "id": "15a6be7d-1357-4d0c-b909-ad056bb90da3",
      "name": "Label Email",
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 1,
      "position": [
        780,
        -380
      ],
      "credentials": {
        "gmailOAuth2": {
          "id": "LD5x69eYRRI6cdrn",
          "name": "Gmail account"
        }
      },
      "disabled": true
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        -100,
        -100
      ],
      "id": "17adc604-e0aa-4c21-adc7-07b1de4e6c71",
      "name": "When clicking ‘Test workflow’"
    },
    {
      "parameters": {
        "operation": "getAll",
        "limit": 1,
        "simple": false,
        "filters": {},
        "options": {}
      },
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        80,
        -100
      ],
      "id": "4a24bf7e-074f-4a29-8ee2-da22dee4f207",
      "name": "Gmail",
      "webhookId": "da152cd7-a4a5-4f67-8849-1be4d093470c",
      "credentials": {
        "gmailOAuth2": {
          "id": "LD5x69eYRRI6cdrn",
          "name": "Gmail account"
        }
      }
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        800,
        180
      ],
      "id": "75c44e92-505b-4316-b884-8a2a6d8aabab",
      "name": "No Operation, do nothing"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.skipAI }}",
                    "rightValue": "",
                    "operator": {
                      "type": "boolean",
                      "operation": "false",
                      "singleValue": true
                    },
                    "id": "10280d0b-08a2-430f-b87f-814d2013d6f6"
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "991e10a4-91c3-4f73-950e-75fee6bb041d",
                    "leftValue": "={{ $json.skipAI }}",
                    "rightValue": "",
                    "operator": {
                      "type": "boolean",
                      "operation": "true",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        500,
        -100
      ],
      "id": "8908f20a-db7e-4e15-b9d0-ccc3ad9ff7f3",
      "name": "Switch"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=You are an assistant summarizing real estate-related emails. Summarize this message in 2-3 sentences with relevant dates, tasks, or names. Do not summarize guest card or AppFolio reports.\n\nIf the email is a maintenance request, mark it as **[Urgent - Maintenance Issue]**.\n\nIf it's not relevant, return **[No summary needed]**.\n {{ $json.trimmedBody }}",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.8,
      "position": [
        860,
        -200
      ],
      "id": "7b795eb1-c4e2-4811-a3ed-db32af3adfe5",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4",
          "mode": "list",
          "cachedResultName": "gpt-4"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        820,
        0
      ],
      "id": "6a637a18-1378-4508-abe1-bcaba5b1f988",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "Navm9hDUnjwpRcbB",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {},
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        960,
        0
      ],
      "id": "25c89001-dbae-4efb-9150-88328faa6aaa",
      "name": "Simple Memory"
    }
  ],
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [],
  "triggerCount": 0,
  "updatedAt": "2025-04-14T15:51:22.000Z",
  "versionId": "deb4ade3-6cd3-4b54-87fe-f41d002862fe"
}