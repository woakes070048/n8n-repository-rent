{
  "active": true,
  "connections": {
    "When clicking ‘Test workflow’": {
      "main": [
        [
          {
            "node": "MySQL Node",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split In Batches": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "MySQL Node",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "MySQL": {
      "main": [
        [
          {
            "node": "Split In Batches",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "OpenAI2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No Operation, do nothing",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "No Operation, do nothing": {
      "main": [
        [
          {
            "node": "Split In Batches",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "MySQL Node": {
      "main": [
        [
          {
            "node": "Split In Batches",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI2": {
      "main": [
        [
          {
            "node": "Facebook Graph API",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Facebook Graph API": {
      "main": [
        [
          {
            "node": "MySQL",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-02-09T23:46:45.784Z",
  "id": "RrTevNx9EnatRcUK",
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "Post to Courtyard FB",
  "nodes": [
    {
      "parameters": {},
      "id": "50b42fd2-e402-4837-96ec-aafb6bc401ff",
      "name": "When clicking ‘Test workflow’",
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        -120,
        360
      ]
    },
    {
      "parameters": {
        "operation": "upsert",
        "table": {
          "__rl": true,
          "value": "all_rental_properties",
          "mode": "list",
          "cachedResultName": "all_rental_properties"
        },
        "dataMode": "defineBelow",
        "columnToMatchOn": "rentable_uid",
        "valueToMatchOn": "={{ $('MySQL Node').item.json.rentable_uid }}",
        "valuesToSend": {
          "values": [
            {
              "column": "fb_post_id",
              "value": "={{ $json.post_id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "44652467-d761-40c6-8983-a45ee6796e46",
      "name": "MySQL",
      "type": "n8n-nodes-base.mySql",
      "typeVersion": 2.4,
      "position": [
        1580,
        500
      ],
      "credentials": {
        "mySql": {
          "id": "OUIfR0k9k0YXHa0V",
          "name": "Blazedata Hostinger"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "batchSize": 1,
        "options": {}
      },
      "id": "86e9b25a-7ef6-4b9a-be55-bc8742f902e1",
      "name": "Split In Batches",
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 1,
      "position": [
        320,
        520
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "d1db1a60-0572-4f37-9148-89f88a42b375",
              "name": "property_name",
              "value": "={{ $('MySQL Node').item.json.property_name }}",
              "type": "string"
            },
            {
              "id": "9c456f0c-c98b-4172-a342-75b5720fea6b",
              "name": "advertised_rent",
              "value": "={{ $('MySQL Node').item.json.advertised_rent }}",
              "type": "string"
            },
            {
              "id": "4b6deb3b-b4cd-485d-93f5-02102cd5ccf4",
              "name": "marketing_description",
              "value": "={{ $json.marketing_description }} {{ $('MySQL Node').item.json.marketing_title }}",
              "type": "string"
            },
            {
              "id": "51058094-5ac3-476b-adec-f01fc3eeef9c",
              "name": "rentable_uid",
              "value": "=https://blazepropertymanagement.appfolio.com/listings/detail/{{ $json.rentable_uid }}",
              "type": "string"
            },
            {
              "id": "846ec8db-3f37-4d6c-adee-6b706218ab16",
              "name": "image_link",
              "value": "={{ $json.image_link }}",
              "type": "string"
            },
            {
              "id": "f08b8595-411d-4d9c-9651-f1bb209e5693",
              "name": "property_link",
              "value": "={{ $json.property_link }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "61957dab-9d6b-49f6-a82f-a849464e1b06",
      "name": "Edit Fields",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        480,
        520
      ]
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "triggerAtHour": 8
            }
          ]
        }
      },
      "id": "c913fbdb-e0b8-4dc7-b42a-1e50a1dcc6a4",
      "name": "Schedule Trigger",
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        -100,
        520
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "459465c3-257f-46d6-982a-f4196a47b121",
              "leftValue": "={{ $json.property_link }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "6b3acff3-347d-4f4d-ad55-1caf5c176926",
      "name": "If",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        640,
        520
      ],
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {},
      "id": "71df39d4-3a91-409d-94d3-263c12e4d58e",
      "name": "No Operation, do nothing",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        820,
        600
      ]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT property_name, unit_name, bedrooms, bathrooms, advertised_rent, marketing_title, marketing_description, sqft, application_fee, rentable_uid, unit_address, posted_to_website, appliances, utilities, property_link, image_link, fb_post_date FROM all_rental_properties WHERE property_name = 'Courtyard Apartments' AND posted_to_website = 'yes'"
      },
      "id": "8fe33bf2-0f43-4db1-86d6-c7b029431459",
      "type": "n8n-nodes-base.mySql",
      "name": "MySQL Node",
      "typeVersion": 1,
      "position": [
        120,
        520
      ],
      "credentials": {
        "mySql": {
          "id": "OUIfR0k9k0YXHa0V",
          "name": "Blazedata Hostinger"
        }
      }
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "gpt-4o",
          "mode": "list",
          "cachedResultName": "GPT-4O"
        },
        "messages": {
          "values": [
            {
              "content": "=Use the following text about a unit for lease at Courtyard Apartments to make a humorous post. Humor level high. Emojis are encouraged. Do not reference or suggest amenities that are not explicitly stated in the original text. Include office phone number 806-414-6021. {{ $json.marketing_description }}\n"
            }
          ]
        },
        "simplify": false,
        "jsonOutput": true,
        "options": {}
      },
      "id": "fe8bd011-2bdf-42bb-92dc-46ba56616f31",
      "name": "OpenAI2",
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.3,
      "position": [
        940,
        500
      ],
      "credentials": {
        "openAiApi": {
          "id": "Navm9hDUnjwpRcbB",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "httpRequestMethod": "POST",
        "graphApiVersion": "v20.0",
        "node": "/111546445169404",
        "edge": "photos",
        "options": {
          "queryParameters": {
            "parameter": [
              {
                "name": "=message",
                "value": "={{ $json.choices[0].message.content.post }}  {{ $('If').item.json.rentable_uid }} "
              },
              {
                "name": "url",
                "value": "={{ $('If').item.json.image_link }}"
              }
            ]
          }
        }
      },
      "id": "e29096c3-e9a1-4acf-88bf-bcde55f55958",
      "name": "Facebook Graph API",
      "type": "n8n-nodes-base.facebookGraphApi",
      "typeVersion": 1,
      "position": [
        1380,
        500
      ],
      "credentials": {
        "facebookGraphApi": {
          "id": "Gl2y3OQGvcqtSTtx",
          "name": "Courtyard FB "
        }
      }
    },
    {
      "parameters": {
        "content": "### Post to Paramount FB - n8n Workflow Documentation\n\n### Overview - this n8n workflow automates the process of posting rental listings for **Paramount Square Apartments** to Facebook. The workflow retrieves available listings from a MySQL database, generates a humorous post using OpenAI, and posts it along with an image to Facebook via the Facebook Graph API.\n\n---\n\n### Workflow Components\n\n### 1. **Trigger Nodes**\n- **Manual Trigger** (`When clicking ‘Test workflow’`)\n  - Allows the workflow to be executed manually for testing.\n- **Schedule Trigger** (`Schedule Trigger`)\n  - Executes daily at 8 AM to automate the posting process.\n\n### 2. **Database Query**\n- **MySQL Node** (`MySQL Node`)\n  - Queries the `all_rental_properties` table to fetch active rental listings from `Paramount Square Apartments`.\n  - Filters properties that are `posted_to_website = 'yes'`.\n\n### 3. **Batch Processing**\n- **Split In Batches** (`Split In Batches`)\n  - Processes rental listings one at a time to avoid API limitations.\n\n### 4. **Data Transformation**\n- **Edit Fields** (`Edit Fields`)\n  - Extracts and formats required data fields such as:\n    - `property_name`\n    - `advertised_rent`\n    - `marketing_description`\n    - `rentable_uid`\n    - `image_link`\n    - `property_link`\n\n### 5. **Conditional Check**\n- **If Node** (`If`)\n  - Ensures that `property_link` is not empty before proceeding with the post.\n\n### 6. **AI Content Generation**\n- **OpenAI Node** (`OpenAI2`)\n  - Uses GPT-4 to create a humorous and engaging Facebook post based on the listing description.\n  - Includes emojis and the office contact number: `806-905-6055`.\n\n### 7. **Facebook Posting**\n- **Facebook Graph API** (`Facebook Graph API`)\n  - Posts the AI-generated description and the listing image to the `Paramount Square Apartments` Facebook page.\n\n### 8. **Database Update**\n- **MySQL Node** (`MySQL`)\n  - Updates the `fb_post_id` in the `all_rental_properties` table to track successful posts.\n\n### 9. **Fallback Handling**\n- **No Operation** (`No Operation, do nothing`)\n  - Prevents execution errors when no valid listings are found.\n\n---\n\n### Execution Flow\n1. **Trigger**: The workflow starts via manual execution or a scheduled trigger at 8 AM.\n2. **Database Query**: Fetches listings that are ready for posting.\n3. **Batch Processing**: Iterates through each listing one by one.\n4. **Data Transformation**: Extracts relevant details for social media.\n5. **Validation**: Ensures that only listings with a `property_link` are processed.\n6. **AI Generation**: Creates an engaging post using OpenAI.\n7. **Facebook Posting**: Uploads the listing to Facebook along with an image.\n8. **Database Update**: Marks the post as published by storing the Facebook post ID.\n\n---\n\n### Notes\n- The workflow uses predefined credentials for MySQL and Facebook API.\n- If no listings are available, the workflow terminates without errors.\n- OpenAI generates creative, engaging posts to enhance social media engagement.\n- Execution logs and errors are handled gracefully to ensure smooth operation.\n\n---\n\n### Dependencies\n- **n8n instance** with the following integrations:\n  - MySQL database (`Blazedata Hostinger`)\n  - OpenAI API (`GPT-4o`)\n  - Facebook Graph API (`Paramount FB`)\n- **Database Table**: `all_rental_properties`\n- **Facebook Page ID**: `109463078470822` (Paramount Square Apartments)\n\n---\n\n### Future Improvements\n- Implement logging for successful and failed posts.\n- Add a fallback mechanism if OpenAI fails to generate a response.\n- Expand automation to other properties using a dynamic query.\n\n",
        "height": 820,
        "width": 640
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        480,
        -340
      ],
      "id": "a11c4e5f-26bb-455c-a8ff-168f8eae591c",
      "name": "Sticky Note"
    }
  ],
  "pinData": {},
  "settings": {
    "executionOrder": "v1",
    "errorWorkflow": "Etm1h3dHXQYzby5C"
  },
  "staticData": {
    "node:Cron 8am": {
      "recurrencyRules": []
    },
    "node:cron 10am": {
      "recurrencyRules": []
    },
    "node:Cron 12": {
      "recurrencyRules": []
    },
    "node:Cron 14": {
      "recurrencyRules": []
    },
    "node:Cron 16": {
      "recurrencyRules": []
    },
    "node:Schedule Trigger": {
      "recurrencyRules": [],
      "recurrenceRules": []
    }
  },
  "tags": [
    {
      "createdAt": "2024-07-27T22:16:08.252Z",
      "updatedAt": "2024-07-27T22:16:08.252Z",
      "id": "Uk7axlMxGS79ju2M",
      "name": "Facebook"
    }
  ],
  "triggerCount": 1,
  "updatedAt": "2025-02-09T23:52:32.000Z",
  "versionId": "8b0ef2f2-86df-4251-9dc3-f478c6700a31"
}