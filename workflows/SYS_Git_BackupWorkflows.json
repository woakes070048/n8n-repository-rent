{
  "active": true,
  "connections": {
    "n8n": {
      "main": [
        [
          {
            "node": "OneAtATime",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "new": {
      "main": [
        [
          {
            "node": "GitHub Create",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "same": {
      "main": [
        [
          {
            "node": "OneAtATime",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "isDiffOrNew",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GitHub": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Globals": {
      "main": [
        [
          {
            "node": "n8n",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "different": {
      "main": [
        [
          {
            "node": "GitHub Edit",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OneAtATime": {
      "main": [
        [
          {
            "node": "GitHub",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "GitHub Edit": {
      "main": [
        [
          {
            "node": "OneAtATime",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "isDiffOrNew": {
      "main": [
        [
          {
            "node": "github_status",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GitHub Create": {
      "main": [
        [
          {
            "node": "OneAtATime",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "github_status": {
      "main": [
        [
          {
            "node": "same",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "different",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "new",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Every 12 hours": {
      "main": [
        [
          {
            "node": "Globals",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "On clicking 'execute'": {
      "main": [
        [
          {
            "node": "Globals",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2024-06-23T10:55:19.491Z",
  "id": "odZg4mUScqvIlfxu",
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "SYS_Git_BackupWorkflows",
  "nodes": [
    {
      "parameters": {},
      "id": "5f85438a-6e4a-45b7-b0f8-766da652e5a8",
      "name": "On clicking 'execute'",
      "type": "n8n-nodes-base.manualTrigger",
      "position": [
        -105,
        915
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "resource": "file",
        "operation": "get",
        "owner": "={{$node[\"Globals\"].json[\"repo\"][\"owner\"]}}",
        "repository": "={{$node[\"Globals\"].json[\"repo\"][\"name\"]}}",
        "filePath": "={{$node[\"Globals\"].json[\"repo\"][\"path\"]}}{{$json[\"name\"]}}.json",
        "asBinaryProperty": false,
        "additionalParameters": {}
      },
      "id": "9412d847-eb7f-495a-bd80-4e2d4ea9215d",
      "name": "GitHub",
      "type": "n8n-nodes-base.github",
      "position": [
        760,
        880
      ],
      "typeVersion": 1,
      "alwaysOutputData": true,
      "credentials": {
        "githubApi": {
          "id": "tc844L9IUnwi1x61",
          "name": "GitHub account"
        }
      },
      "continueOnFail": true
    },
    {
      "parameters": {
        "dataType": "string",
        "value1": "={{$json[\"github_status\"]}}",
        "rules": {
          "rules": [
            {
              "value2": "same"
            },
            {
              "value2": "different",
              "output": 1
            },
            {
              "value2": "new",
              "output": 2
            }
          ]
        }
      },
      "id": "084041c1-934b-4eca-a3cc-1243dfde65ff",
      "name": "github_status",
      "type": "n8n-nodes-base.switch",
      "position": [
        1380,
        1020
      ],
      "typeVersion": 1
    },
    {
      "parameters": {},
      "id": "80805f4c-171d-4f91-91c3-412b8e84aa64",
      "name": "same",
      "type": "n8n-nodes-base.noOp",
      "position": [
        1620,
        820
      ],
      "typeVersion": 1
    },
    {
      "parameters": {},
      "id": "01fdeece-4ac4-46d7-894f-e5f09dbacf7a",
      "name": "different",
      "type": "n8n-nodes-base.noOp",
      "position": [
        1620,
        1020
      ],
      "typeVersion": 1
    },
    {
      "parameters": {},
      "id": "443741e8-c20c-4e93-b553-0215a0352fc6",
      "name": "new",
      "type": "n8n-nodes-base.noOp",
      "position": [
        1620,
        1200
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "resource": "file",
        "operation": "edit",
        "owner": "={{$node[\"Globals\"].json[\"repo\"][\"owner\"]}}",
        "repository": "={{$node[\"Globals\"].json[\"repo\"][\"name\"]}}",
        "filePath": "={{$node[\"Globals\"].json[\"repo\"][\"path\"]}}{{$node[\"OneAtATime\"].json[\"name\"]}}.json",
        "fileContent": "={{$node[\"isDiffOrNew\"].json[\"n8n_data_stringy\"]}}",
        "commitMessage": "=[N8N Backup] {{$node[\"OneAtATime\"].json[\"name\"]}}.json ({{$json[\"github_status\"]}})"
      },
      "id": "bd6cffa5-49be-4e2a-aab7-023b7fcafb36",
      "name": "GitHub Edit",
      "type": "n8n-nodes-base.github",
      "position": [
        1800,
        1020
      ],
      "typeVersion": 1,
      "credentials": {
        "githubApi": {
          "id": "tc844L9IUnwi1x61",
          "name": "GitHub account"
        }
      }
    },
    {
      "parameters": {
        "resource": "file",
        "owner": "={{$node[\"Globals\"].json[\"repo\"][\"owner\"]}}",
        "repository": "={{$node[\"Globals\"].json[\"repo\"][\"name\"]}}",
        "filePath": "={{$node[\"Globals\"].json[\"repo\"][\"path\"]}}{{$node[\"OneAtATime\"].json[\"name\"]}}.json",
        "fileContent": "={{$node[\"isDiffOrNew\"].json[\"n8n_data_stringy\"]}}",
        "commitMessage": "=[N8N Backup] {{$node[\"OneAtATime\"].json[\"name\"]}}.json ({{$json[\"github_status\"]}})"
      },
      "id": "c800ee76-109d-4f1b-ba1c-86cf075d5408",
      "name": "GitHub Create",
      "type": "n8n-nodes-base.github",
      "position": [
        1800,
        1200
      ],
      "typeVersion": 1,
      "credentials": {
        "githubApi": {
          "id": "tc844L9IUnwi1x61",
          "name": "GitHub account"
        }
      }
    },
    {
      "parameters": {
        "batchSize": 1,
        "options": {}
      },
      "id": "c49f1f68-e25e-4dc8-885a-4c706b1072a7",
      "name": "OneAtATime",
      "type": "n8n-nodes-base.splitInBatches",
      "position": [
        520,
        1040
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "repo.owner",
              "value": "brandonblaze1"
            },
            {
              "name": "repo.name",
              "value": "n8n-repository"
            },
            {
              "name": "repo.path",
              "value": "workflows/"
            }
          ]
        },
        "options": {}
      },
      "id": "ce652c2f-cd15-4788-bd06-951902efa630",
      "name": "Globals",
      "type": "n8n-nodes-base.set",
      "position": [
        80,
        1040
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "triggerTimes": {
          "item": [
            {
              "mode": "everyX",
              "value": 12
            }
          ]
        }
      },
      "id": "10290343-b358-4f57-8e5d-8b434ab5d6ff",
      "name": "Every 12 hours",
      "type": "n8n-nodes-base.cron",
      "position": [
        -105,
        1175
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## Workflow Backups\nThis workflow will automatically backup your workflows to your Github account every 12 hours.\n\n### Setup\nOpen Globals and update the values below\n**repo.owner:** This is your Github username\n**repo.name:** This is the name of your repository\n**repo.path:** This is the folder to use within the repository, If it doesn't exist it will be created.\n\nIf your username was `n8n-io` and your repository was called `n8n-backups` and you wanted the workflows to go into a `workflows` folder you would set:\n\nrepo.owner - n8n-io\nrepo.name - n8n-backups\nrepo.path - workflows",
        "height": 464.79920462713443,
        "width": 389.78906250000017
      },
      "id": "9ad433e1-222a-4b01-ab90-5042742e2c8a",
      "name": "Note",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        40,
        460
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## Single Item Loop\nWe process each workflow item one at a time, We first check Github to see if a file exists then we merge the Github Data and the API item so we can check if the values match in the function node `isDiffOrNew` we then set a status of `same`, `different` or `new`",
        "height": 424.04333333333386,
        "width": 755.2349999999991
      },
      "id": "9f230c99-b5f4-4fd2-bcf3-3e06ab1abc89",
      "name": "Note2",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        500,
        760
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## Save the data\nUsing the switch node we work out what to do based on the previous status,  If it is the same we do nothing, If it is different we update the file in Github and if it is new we create a new file. After this is done we loop back to the Split in Batches node (OneAtAtTime) to start the process again.",
        "height": 693.9283333333326,
        "width": 666.4416666666662
      },
      "id": "8407af55-3c6f-48c1-a282-3058754a629d",
      "name": "Note3",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1340,
        700
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "filters": {},
        "requestOptions": {}
      },
      "id": "1fa1bca7-88c6-4dec-9cc4-1b65659e245f",
      "name": "n8n",
      "type": "n8n-nodes-base.n8n",
      "position": [
        280,
        1040
      ],
      "typeVersion": 1,
      "credentials": {
        "n8nApi": {
          "id": "UjH1vFHaVrXZkoWc",
          "name": "n8n account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// File Returned with Content\nif (Object.keys($input.all()[0].json).includes(\"content\")) {\n  // Get JSON Objects\n  var origWorkflow = JSON.parse(Buffer.from($input.all()[0].json.content, 'base64'));\n  var n8nWorkflow = $input.all()[1].json;\n  \n  // Order JSON Objects\n  var orderedOriginal = {}\n  var orderedActual = {}\n  \n  Object.keys(origWorkflow).sort().forEach(function(key) {\n    orderedOriginal[key] = origWorkflow[key];\n  });\n  \n  Object.keys(n8nWorkflow).sort().forEach(function(key) {\n    orderedActual[key] = n8nWorkflow[key];\n  });\n\n  // Determine Difference\n  if ( JSON.stringify(orderedOriginal) === JSON.stringify(orderedActual) ) {\n    $input.all()[0].json.github_status = \"same\";\n    $input.all()[0].json.content_decoded = orderedOriginal;\n  } else {\n    $input.all()[0].json.github_status = \"different\";\n    $input.all()[0].json.content_decoded = orderedOriginal;\n    $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\n  }\n// No File Returned / New Workflow\n} else {\n  // Order JSON Object\n  console.log(\"$input.all()[0].json:\", $input.all()[0].json);\n  console.log(\"$input.all()[1].json:\", $input.all()[1].json);\n  var n8nWorkflow = ($input.all()[1].json);\n  var orderedActual = {}\n  Object.keys(n8nWorkflow).sort().forEach(function(key) {\n    orderedActual[key] = n8nWorkflow[key];\n  });\n  \n  // Proper Formatting\n  $input.all()[0].json.github_status = \"new\";\n  $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\n}\n\n// Return Items\nreturn $input.all();"
      },
      "id": "b9d32e32-8cb0-463d-bfc9-7c4df778b33d",
      "name": "isDiffOrNew",
      "type": "n8n-nodes-base.code",
      "position": [
        1140,
        1020
      ],
      "typeVersion": 1
    },
    {
      "parameters": {},
      "id": "ea426d48-d2ca-4efe-b0b6-25ffb402cb48",
      "name": "Merge",
      "type": "n8n-nodes-base.merge",
      "position": [
        960,
        1020
      ],
      "typeVersion": 2
    }
  ],
  "pinData": {},
  "settings": {
    "executionOrder": "v1",
    "errorWorkflow": "Etm1h3dHXQYzby5C"
  },
  "staticData": null,
  "tags": [
    {
      "createdAt": "2025-03-08T12:54:58.497Z",
      "updatedAt": "2025-03-08T12:54:58.497Z",
      "id": "1e4TQgxqRNISmLgi",
      "name": "backup_maggie"
    }
  ],
  "triggerCount": 1,
  "updatedAt": "2025-03-08T12:55:00.000Z",
  "versionId": "3bd63d1b-e140-47bb-9ae1-a8b0771d21bd"
}