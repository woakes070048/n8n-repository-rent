{
  "active": false,
  "connections": {
    "Daily Trigger": {
      "main": [
        [
          {
            "node": "Baserow",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Pick Random Post": {
      "main": [
        [
          {
            "node": "Attach Post to Each Page",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Baserow": {
      "main": [
        [
          {
            "node": "Pick Random Post",
            "type": "main",
            "index": 0
          },
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request": {
      "main": [
        [
          {
            "node": "Attach Post to Each Page",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "HTTP Request1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-04-16T11:48:22.057Z",
  "id": "PuEf0l8EBppmScqh",
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "My workflow 19",
  "nodes": [
    {
      "parameters": {},
      "name": "Daily Trigger",
      "type": "n8n-nodes-base.cron",
      "typeVersion": 1,
      "position": [
        -60,
        0
      ],
      "id": "c7b609db-5810-4efc-b68b-53d1afa3e297"
    },
    {
      "parameters": {
        "jsCode": "// items is already an array of individual post records\nif (!items || items.length === 0) {\n  throw new Error(\"No active posts available.\");\n}\n\n// Pick one record at random\nconst selected = items[Math.floor(Math.random() * items.length)];\n\n// Defensive fallback for missing Description\nselected.json.Description = selected.json.Description || selected.json.Name || '';\n\nif (\n  !selected.json.File ||\n  !Array.isArray(selected.json.File) ||\n  !selected.json.File[0] ||\n  !selected.json.File[0].url\n) {\n  throw new Error(\"No valid image found in selected post.\");\n}\n\nreturn [selected];\n"
      },
      "name": "Pick Random Post",
      "type": "n8n-nodes-base.code",
      "typeVersion": 1,
      "position": [
        380,
        80
      ],
      "id": "addc1f03-5cab-445e-ac61-83212da1f971"
    },
    {
      "parameters": {
        "databaseId": 172,
        "tableId": 703,
        "returnAll": true,
        "additionalOptions": {}
      },
      "type": "n8n-nodes-base.baserow",
      "typeVersion": 1,
      "position": [
        160,
        0
      ],
      "id": "67184866-8d9c-42b6-81c0-1874a4fcadeb",
      "name": "Baserow",
      "credentials": {
        "baserowApi": {
          "id": "5zW4AD0Cpmzo8h8d",
          "name": "Baserow account"
        }
      }
    },
    {
      "parameters": {
        "url": "https://base.blazeproperty.com/api/database/rows/table/704/?user_field_names=true&filter__Active__equal=true",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        380,
        -160
      ],
      "id": "8df553ac-10a7-40d3-81d9-3156a714a457",
      "name": "HTTP Request",
      "credentials": {
        "httpHeaderAuth": {
          "id": "HTGHTGVhQpvKZvdW",
          "name": "baserow"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const records = items[0].json.results;\n\nreturn records.map(row => ({\n  json: {\n    page_id: row[\"Facebook ID\"],\n    token: row[\"Facebook Key\"],\n    name: row[\"Name\"],\n    url: row[\"Facebook Address\"] || '',\n    expiration: row[\"Expiration\"] || ''\n  }\n}));\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1040,
        0
      ],
      "id": "243e4f41-dbb8-410a-99f3-ef6f2d948369",
      "name": "Code"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://graph.facebook.com/v19.0/{{ $json.page_id }}/photos",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "url",
              "value": "={{ $json.page_id }}"
            },
            {
              "name": "caption"
            },
            {
              "name": "access_token"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1240,
        0
      ],
      "id": "dae12701-2bf7-4990-9b6a-6819a301b615",
      "name": "HTTP Request1"
    },
    {
      "parameters": {
        "jsCode": "const post = $items(\"Pick Random Post\")[0].json; // The single selected post\n\nreturn items.map(item => {\n  const page = item.json;\n  return {\n    json: {\n      ...page,\n      post_url: post.File?.[0]?.url || '',\n      caption: post.Description || post.Name || ''\n    }\n  };\n});\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        620,
        -60
      ],
      "id": "49301f35-be1f-4b04-b54b-1200f13fed50",
      "name": "Attach Post to Each Page"
    }
  ],
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [],
  "triggerCount": 0,
  "updatedAt": "2025-04-16T15:30:39.000Z",
  "versionId": "c838a57f-0f14-4619-8680-6a2a23d6da1c"
}